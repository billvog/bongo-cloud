"""
Django settings for bongocloudapi project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
import dj_database_url
from pathlib import Path
from corsheaders.defaults import default_headers

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

IS_PROD = 'BONGO_PRODUCTION' in os.environ

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5g9u#1a_qzr7lsn4_nd3hc32p_8tcn@_j&^ucsnnv(oopjl83y'
if 'SECRET_KEY' in os.environ:
    SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = not IS_PROD

if IS_PROD:
    ALLOWED_HOSTS = [
        'bongoapi.bongo-cloud.ga',
    ]
else:
    ALLOWED_HOSTS = [
        'localhost',
    ]


# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'authentication',
    'filesystem'
]

if not IS_PROD:
    INSTALLED_APPS += ['rest_framework']

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'authentication.middleware.RefreshJWTMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bongocloudapi.urls'

# Extended User model
AUTH_USER_MODEL = 'authentication.User'

if IS_PROD:
    JWT_ACCESS_TOKEN_SECRET = os.environ['JWT_ACCESS_TOKEN_SECRET']
    JWT_REFRESH_TOKEN_SECRET = os.environ['JWT_REFRESH_TOKEN_SECRET']
else:
    JWT_ACCESS_TOKEN_SECRET = '1f8c63edb93a8b7d87137f86903fb003e117d15f8ac29a371cd5f15ee760b0ac'
    JWT_REFRESH_TOKEN_SECRET = '9d3c0f6695b3dea490405946c9e5d5a6bdab6ffef6b82f79e79cbf8d1a378872'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bongocloudapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

MAX_CONN_AGE = 600

DATABASES = {
    'default': dj_database_url.config(conn_max_age=MAX_CONN_AGE, ssl_require=False, default="mysql://root:@localhost:3306/bongocloud_dev")
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Use always https
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Media files (uploaded by user)
MEDIA_ROOT = BASE_DIR.parent / 'bongo-storage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Cors
if IS_PROD:
    CORS_ALLOWED_ORIGINS = ['https://bongo-cloud.ga']
else:
    CORS_ALLOWED_ORIGINS = ['http://localhost:3000']

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = list(default_headers) + [
    'x-access-token',
]

CORS_EXPOSE_HEADERS = [
    'x-access-token',
]

# Django Rest Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'authentication.authentication.JWTAuthentication',
    )
}